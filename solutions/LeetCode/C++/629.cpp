__________________________________________________________________________________________________
sample 8 ms submission
int any = []() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	return 0;
}();

int d[1001] = {1,799,319599,85332400,108986081,668967132,924217973,756122910,584264740,961837919,582187152,723887399,563552946,152369586,531261392,501838500,995742945,720987264,436380031,568541685,455394544,307279060,450292274,652054338,347159231,729622956,586039630,513916485,310937670,327860291,780107372,715423558,798306312,478983131,415256252,449520110,51155613,799262202,76989929,353378308,242236036,952719470,37157723,185932367,124236419,245388453,867235676,46689751,167399287,701721403,167454811,296555748,69961822,381319500,675400627,277866227,865981244,741119697,77715120,233349327,21537520,55930365,371577279,651603135,236998731,67908352,306354549,252750069,708513025,205324802,962688592,549502668,287247167,576394421,462125064,846856826,940587550,417681983,137600169,228935217,839345704,268093278,296329956,416744452,75031092,196295570,967007526,176674960,869860295,856845760,107985331,554580387,471207470,772130104,536787555,788506845,885281545,603357813,491612617,679274776,642506394,29470025,461774852,355674691,482224258,739720879,396375767,309762770,504046745,872020199,905180556,71858888,527323795,963985565,481304293,847592322,767826008,305733330,994629448,17614629,148455412,472741961,674303716,810168113,742316237,676367536,886736852,264144135,600992878,173220759,174402569,643634657,73219065,813581509,711372343,928091175,171461046,675576704,165334717,168622457,834845559,57923299,824176109,235637994,43840561,759898140,464086831,558810180,100539405,33954640,675013315,501028419,574415543,448030,616118893,504071664,477565982,960531989,779956828,701344714,884259345,790447774,11983680,541438280,858901109,148117683,398748511,223884803,862967275,506843527,939325178,817837404,406746438,256923063,285041058,476556740,865533008,4728526,327357572,47790394,963895347,925538370,494883335,282960970,701536637,369513249,770583187,598759282,438331582,312887872,894693417,722729837,904113076,291874592,785019007,18760880,940118260,126047124,546123291,798547371,279165933,504437360,379530718,822289782,174844523,854602653,471106595,105639768,654485468,412949652,753194219,732966565,122692441,459833411,314356345,284303890,993923063,375909264,881181545,568459693,961196390,197170725,545217772,610037636,319095297,226013709,803235793,759170492,134285466,135217034,727817799,565290000,181089848,111839717,366159888,237639852,605712252,558514772,31251715,541896488,147155135,814221124,135499647,336815444,469448106,216052657,65001338,594566813,706161622,183324451,908531989,427890224,594353841,168596894,21573723,177804690,986457141,91940371,738784915,895757000,774360219,254445513,33752732,206983889,118227447,876162125,838318705,959246459,389578016,608498741,448623622,760315354,189907930,770768444,901040816,565971331,725161084,419551803,596634849,346653406,298905904,976718947,432834201,928505080,878965250,202475884,362577280,887029594,196460161,228168706,449886071,121048265,134091035,700511930,177371333,530910113,330821627,741125691,140837275,196957131,780032570,260035249,426991709,767549708,94075995,598425268,617679461,129537656,882627311,714096891,527661979,366687148,261149879,518571694,5335878,7451986,513188920,986292768,732294010,86785218,809298947,2060677,581883228,668262315,966276674,521290266,37208517,952387546,288292054,757151946,791309634,429929680,958727996,258584836,679876871,44987908,831647654,437627930,2314661,962444338,557819119,618223747,312663042,987615461,757965624,519126128,18727240,118673697,23175299,883455648,167531348,207013496,104343347,78130320,685015476,498159143,420615519,460663075,19193758,729984803,1397342,941142,17808666,258569014,720604488,816667336,754801321,586521579,686150632,473436150,106442663,26804017,89495439,214578446,522599944,285708514,42495646,978214583,102442603,629393621,225351354,962859277,410699323,707280986,772619441,466786490,691719633,274753328,341444257,601157717,64435587,477553616,994795566,959879613,639610759,752792803,907907208,885586138,324652801,592800136,628007887,562111947,835878230,989388918,376569871,545776096,910115422,970091297,107330807,841771101,830531173,376597964,852234622,714061709,181987354,546504066,381613203,483616145,764220459,519322694,18748365,732693254,19553769,554598997,996566686,143983666,570534838,371445794,598724893,917995777,426091819,10767293,811311626,70429202,687572160,715086325,292558617,746714783,288735484,105154878,141855563,417680880,130820715,620839798,700211621,827238029,901007318,462083708,281572108,711448690,923801220,654797202,409004045,536617475,957323293,420857856,792017856,108723312,142063737,623633654,368030146,273975460,478555108,846706423,872030578,56238486,656625230,582035419,789162376,639566085,448173489,780451330,505143623,832540011,902795002,226609769,865252883,433049477,171721650,545001538,780802906,702407829,218251512,296351723,315144943,465765242,130226394,112933509,274169342,650142353,371635113,827403212,175273844,38194683,983713659,628138635,116610276,598043639,663591823,695542604,237860861,692347654,595706802,995375780,42751596,931936442,59333823,883676254,509945976,341268965,242052126,862126269,58036869,529053747,248577215,898513871,333615487,588871673,304598334,425610220,772950253,21199614,386065111,921100378,741444361,197742690,702727358,21453107,61583753,553258930,239099965,164712577,527905158,691099929,475878216,820588729,496213451,37179380,824813613,300965543,277965614,265709899,655687606,888435240,153830934,777756985,83616244,837378997,55274376,214169855,967360600,759502125,792404535,247436980,325034327,873103325,324963980,769992511,98348975,248857274,895032632,517515280,259789900,30893515,841962920,224671,809581328,106037352,859479055,93384235,164907730,20568127,733185938,422063297,712161370,203252003,210086586,13131558,529802637,434273131,503543454,113423146,155217033,157578703,511331180,746069799,847952592,960351640,549717711,989654265,113036684,633916358,697602208,28255474,728563374,668962971,536855788,615914574,933856928,127783454,545089101,848608744,601589307,303141678,806906419,915702027,90801902,999315411,453912720,37730354,382008233,645338827,545096826,471683817,922705618,487109014,454550450,542407014,115389557,845843868,250826919,113914640,91284411,445488125,791603136,143723296,563424603,829701519,30854798,985018081,383155693,416551555,327225084,548096989,885535251,47378731,182674734,113357756,398359192,869619418,14251908,153580000,142304232,208308527,980962738,791015359,899328285,141619781,292461137,482879148,442114663,162937530,280784892,757627694,570412509,145974933,83482254,876620008,428674599,215428012,254014899,537507211,943983601,101696556,440436649,24136742,831917715,583408270,34266360,665914815,897294823,921309070,544702275,500237681,243415300,594210435,899920746,187808064,342226980,708678321,196548869,989446612,112615990,996480629,929334671,27266978,948221757,270135715,360151872,68374515,433458751,876945772,463618784,30473922,759157548,763541180,716224888,285782183,910326108,813016832,780442014,6041411,201277124,6606274,457669536,151737823,40036891,387182309,525492003,492987862,342868487,535217654,503277168,960828521,144061186,310554475,660181732,717150618,945210359,488178462,31950923,173039057,543041880,72963042,421387339,255472780,538340350,650629408,209368217,387428576,530394697,286732699,573638880,882110538,293526556,541714017,699389892,44625055,713969355,569436931,941880512,223764884,279311831,633945293,405292793,70168883,488401085,436119631,196579243,442216017,420581417,780905266,497859898,663783991,485460715,798502735,661690165,922955774,771830981,215878407,750476601,185344908,728973473,10676335,474214448,130840624,999462355,23795338,855330760,635266713,783937542,907670180,81414936,961923814,446121121,950864863,655821447,719818395,53870826,669773291,722169029,2146695,987634050,907791247,622241063,764384829,190996466,475232473,737157164,564553985,655762166,750759454,89368033,74912772,515003113,407770390,852596052,559148308,213632766,321523784,61337447,224778868,32294185,840626541,518751174,725392041,161669289,950627948,109851867,674723681,722215652,328505210,860081245,496840058,503312589,580615400,50572363,292931809,613118662,206757947,81359158,805235206,344102804,883513164,856863711,926948107,523673657,850570956,16458837,99746754,864477174,279422044,860140936,621419635,718251888,242707236,642361189,411561465,650864293,98232527,385502369,674972286,290624760,786719721,854558503,273913339,790641612,806151665,594471621,325535544,124755995,473033968,829783237,484142383,488383796,188407518,360069662,926689261,383510901,751611039,458843770,725118549,590158912,508969923,498182874,920379838,489720151,792091654,779817923,429081783,500881228,269110736,727717824,814946912,613985092,510349393,282459871,786989157,650277304,159818175,609338834,964267282,848739492,50641926,296540431,801989096,941458618,320556684,632333780,963921274,371645123,100171566,739175810,235808649,147028545,614690584,586903368,367775630,231971587,655876315,830194358,930675450,417555253,596701590,571528179,154512509,294715516,856998827,84973720,982920089,434028150,480090868,764882401,61573869,321202435,176786663,965486269,319950472,796051224,559354588,10145566,660056392,269079691,617194414,263804834,643529556,188280352,768140258,560381829,6538254,716247429,68203294,682132860,942100161,133064176,120650794,305468707,950761129,429536940,834694631,831480765,36678220,373170401,414193471,146754973,490732991,179080132,330241190,825208162,431637971,678450221,828758102,305987672,927841906,714968456,295384189,127874322,491295459,28844345,734537227,991742706,704450101,672986522,162086754,373102819,249067811,368153166,12736632,412294228,9397906,624562186,74015774,774780684,227464176,690616493,829257553,580027506,166003564,263198850,409712282,910470827,285591368,556631378,177719091,895935275,952436409,607206789,495728149,401186310,521401117,426708540,497418731,733912695,806058835,872734817,95137455,230281428,15314459,588886977,787524972,626256415,};
class Solution {
    const static int MOD = 1e9 + 7;
public:
    int kInversePairs(int n, int k) {
        if (k == 0 || k == n * (n - 1) / 2){
            return 1;
        }
        
        if (k > n * (n - 1) / 2){
            return 0;
        }
        
        if (k == 1){
            return n - 1;
        }
        
        vector<int> dp(k + 1, 0);
        dp[0] = dp[1] = 1;
        int start = 3;
        if (n >= 800){
            for (int i = 0; i <= k; i++){
                dp[i] = d[i];
            }
            start = 801;
        }
        for (int i = start; i <= n; i++){
            int maxi = min(k, i * (i - 1) / 2);
            int last = dp[maxi];
            for (int j = maxi; j == maxi; j--){
                for (int p = max(j - i + 1, 0); p < j; p++){
                    dp[j] = (dp[j] + dp[p]) % MOD;
                }
            }
            
            for (int j = maxi - 1; j >= 1; j--){
                int _last = last;
                last = dp[j];
                dp[j] = (dp[j+1] - _last + MOD) % MOD;
                if (j - i + 1 >= 0){
                    dp[j] = (dp[j] + dp[j - i + 1]) % MOD;
                }
            }
        }
        
        return dp[k];
    }
};
__________________________________________________________________________________________________
sample 16 ms submission
#define N 1010
int dp[N][N];
const int MOD = 1e9+7;
class Solution {
public:
    int kInversePairs(int n, int k) {
        for(int i=0;i<=n;i++) dp[i][0] = 1;
        for(int i=1;i<=n;i++){
            int sum = dp[i-1][0];
            for(int j=1;j<=k;j++){
                if(j>=i) sum -= dp[i-1][j-i];
                if(sum < 0) sum += MOD;
                (sum += dp[i-1][j])%=MOD;
                dp[i][j] = sum;
            }
        }
        
        return dp[n][k];
    }
};
__________________________________________________________________________________________________
sample 8976 kb submission

#include <algorithm>
#include <vector>
using std::max;
using std::min;
using std::vector;

class Solution {
public:
    int kInversePairs(int n, int iv) {
        if (iv == 0) {
            return 1;
        }
        
        const int MOD = 1000000007;
        vector<vector<int>> dp(2, vector<int>(iv + 1));
        int m, m0;
        int i, j;
        int f, nf;
        
        f = 1;
        nf = !f;
        dp[nf][0] = 1;
        m0 = 0;
        for (i = 1; i < n; ++i) {
            m = min(i * (i + 1) / 2, iv);
            for (j = 0; j <= m; ++j) {
                dp[f][j] = 0;
            }
            
            dp[f][0] = 1;
            for (j = 1; j <= m; ++j) {
                dp[f][j] = dp[f][j - 1];
                if (j <= m0) {
                    dp[f][j] = (dp[f][j] + dp[nf][j]) % MOD;
                }
                if (j - (i + 1) >= 0 && j - (i + 1) <= m0) {
                    dp[f][j] = (dp[f][j] + MOD - dp[nf][j - (i + 1)]) % MOD;
                }
            }
            m0 = m;
            
            f = !f;
            nf = !f;
        }
        
        int res = dp[nf][iv];
        dp.clear();
        
        return res;
    }
};